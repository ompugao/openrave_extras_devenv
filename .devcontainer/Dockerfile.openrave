#syntax=docker/dockerfile:1.2
ARG from
ARG OPENRAVE_BUILD_TYPE=Release
ARG ROS_BUILD_TYPE=Release

FROM ${from} as builder
#ENV SCCACHE_REDIS=${SCCACHE_REDIS}
COPY --from=materialize/sccache:latest /usr/local/bin/sccache /usr/local/bin/sccache
RUN pip install catkin-tools
RUN apt update && apt -y install checkinstall

FROM builder as openrave_builder
COPY openrave /workspace/openrave
# Install OpenRAVE
RUN --mount=type=cache,target=/root/.cache/sccache/ mkdir build_openrave && cd build_openrave \
  	&& BOOST_ROOT=/usr/local cmake -DODE_USE_MULTITHREAD=ON -DCMAKE_CXX_STANDARD=11 -DOSG_DIR=/usr/local/lib64/ -DCMAKE_BUILD_TYPE=$OPENRAVE_BUILD_TYPE -DBoost_NO_BOOST_CMAKE=ON -DBoost_NO_SYSTEM_PATHS=TRUE -DBOOST_ROOT=/usr/local/ -DFCL_USE_STATISTICS=ON -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache /workspace/openrave \
	&& make -j `nproc` \
	&& make install 
# # uncomment the following lines when you omit openrave/build directory from this layer
# 	&& checkinstall --install=no --default\
# 	&& cp *deb /tmp/
# 
# FROM builder as main
# COPY --from=openrave_builder /tmp/*deb /tmp
# RUN dpkg -i /tmp/*deb && rm /tmp/*deb
RUN mkdir -p ~/ros_catkin_ws/dev
COPY catkin_ws /root/ros_catkin_ws/dev/src
RUN --mount=type=cache,target=/root/.cache/sccache/ cd ~/ros_catkin_ws/dev \
	&& . ~/ros_catkin_ws/parent/install_isolated/setup.sh \
	&& BOOST_ROOT=/usr/local catkin build --verbose --no-status -DCMAKE_BUILD_TYPE=$ROS_BUILD_TYPE -DBoost_NO_BOOST_CMAKE=ON -DBoost_NO_SYSTEM_PATHS=TRUE -DBOOST_ROOT=/usr/local/ -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache 
	# && rm build logs -rf

# FROM ${from}
# COPY --from=openrave_builder /tmp/*deb /tmp
# COPY --from=ros_builder catkin_ws/devel catkin_ws/devel
# RUN dpkg -i /tmp/*deb && rm /tmp/*deb
